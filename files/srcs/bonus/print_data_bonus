# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    print_data_bonus                                   :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: mmateo-t <mmateo-t@student.42madrid>       +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2020/06/26 11:34:30 by mmateo-t          #+#    #+#              #
#    Updated: 2020/07/18 02:47:46 by mmateo-t         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

#include "cub3d_bonus.h"

void print_data(t_engine en)
{
	int i;

	i = 0;
	printf("Resolution:\n");
	printf("Width: %i\n", g_config.r.x);
	printf("Height: %i\n", g_config.r.y);
	printf("Floor rgb_hex: %s\n", g_config.f.rgb_hex);
	while (i < 3)
	{
		printf("Floor rgb[%i]: %i\n", i, g_config.f.rgb[i]);
		i++;
	}
	i = 0;
	printf("Ceiling rgb_hex: %s\n", g_config.c.rgb_hex);
	while (i < 3)
	{
		printf("Ceiling rgb[%i]: %i\n", i, g_config.c.rgb[i]);
		i++;
	}

	//TEXTURES

	printf("NO: %s\n", g_config.no);
	printf("SO: %s\n", g_config.so);
	printf("EA: %s\n", g_config.ea);
	printf("WE: %s\n", g_config.we);
	printf("S1: %s\n", g_config.s1);
	printf("S2: %s\n", g_config.s2);
	printf("CT: %s\n", g_config.ct);
	printf("FT: %s\n", g_config.ft);
	printf("TX1: %s\n", g_config.tx1);
	printf("TX2: %s\n", g_config.tx2);

	printf("PosX: %i\n", g_config.pos_x);
	printf("PosY: %i\n", g_config.pos_y);
	//printf("Orientacion: %c\n", g_config.map.world_map[g_config.pos_x][g_config.pos_y]);
	printf("Map:\n");
	i = 0;
	while (i < g_config.map.n_row)
	{
		printf("%s\n", g_config.map.world_map[i]);
		i++;
	}
	printf("Position X: %f\n", en.pos.x);
	printf("Position Y: %f\n", en.pos.y);

	i = 0;
	while (i < en.num_sprites)
	{
		printf("NÂº%i \t Distance: %f \t Num: %i\n", i, en.sprite_distance[i], en.sprite_order[i]);
		i++;
	}
}